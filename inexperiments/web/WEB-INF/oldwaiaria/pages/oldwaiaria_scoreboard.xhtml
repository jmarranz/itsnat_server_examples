<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="http://www.w3.org/StyleSheets/TR/base"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml"
      xmlns:aaa="http://www.w3.org/2005/07/aaa"
      xmlns:itsnat="http://itsnat.org/itsnat">
<head>
<title>AJAX Scoreboard</title>

<style type="text/css">
.statsCell{
   text-align: right;
   }

div#scoreboardRegion{
    position: relative;
    margin-left: auto;
    margin-right: auto;
    width: 70%;
    }

h1 { text-align: center }
h2 { text-align: center }
h3 { text-align: center }

div#theReals{
    float: left;
    width: 40%;
    }

div#theNicks{
    float: right;
    width: 40%;
    }

div#winnerDiv{
    clear: both;
    }
</style>

<script type="text/javascript">
/* <![CDATA[ */

window.onload = init;
var minimumWaitTime = 3; // Original was: 5
var currentTimer = 0;

function statFlash(statID){
   document.getElementById(statID).style.backgroundColor = "black";
   document.getElementById(statID).style.color = "yellow";
   document.getElementById(statID).style.fontWeight = "bold";
    var func = function (flashedID) {
        if (!flashedID) flashedID = arguments.callee.flashedID; // MSIE
       document.getElementById(flashedID).style.backgroundColor = "";
       document.getElementById(flashedID).style.color = "";
       document.getElementById(flashedID).style.fontWeight = "";
       };
   func.flashedID = statID;
   window.setTimeout(func,500,statID);
   }

function init(){
   runGame();
   }

function runGame(){
   updateGameClock();
   if (currentTimer < 1){
      makeAPlay();
      currentTimer = minimumWaitTime;
      }
   currentTimer = currentTimer-1;
   if (!gameOver()){
      window.setTimeout(runGame,1000);
      }
   }

function updateGameClock(){
   var gameclockStr = document.getElementById('gameClock').textContent;
   if (gameclockStr == null){
      gameclockStr = document.getElementById('gameClock').innerText;
      }
   var minutes = parseInt(gameclockStr.substring(0,gameclockStr.indexOf(':')));
   var seconds = parseInt(gameclockStr.substring(gameclockStr.indexOf(':')+1));
   if (seconds > 0){
      seconds = seconds-1;
      }
   else if (minutes > 0){
      minutes = minutes-1;
      seconds = 59;
      }
   var zeroPadMin = "";
   if (minutes < 10){
      zeroPadMin = "0";
      }
   var zeroPadSec = "";
   if (seconds < 10){
      zeroPadSec = "0";
      }
   document.getElementById('gameClock').textContent = zeroPadMin + minutes + ":" + zeroPadSec + seconds;
   document.getElementById('gameClock').innerText = zeroPadMin + minutes + ":" + zeroPadSec + seconds;
   }

function gameOver(){
   var gameclockStr = document.getElementById('gameClock').textContent;
   if (gameclockStr == null){
      gameclockStr = document.getElementById('gameClock').innerText;
      }
   if (gameclockStr == "00:00"){
      declareWinner();
      return true;
      }
   return false;
   }

function declareWinner(){
   var theScoreStr = document.getElementById('realsScore').textContent;
   if (theScoreStr == null){
      theScoreStr = document.getElementById('realsScore').innerText;
      }
   var theRealsScore = parseInt(theScoreStr.substring(theScoreStr.indexOf(':')+1));
   theScoreStr = document.getElementById('nicksScore').textContent;
   if (theScoreStr == null){
      theScoreStr = document.getElementById('nicksScore').innerText;
      }
   var theNicksScore = parseInt(theScoreStr.substring(theScoreStr.indexOf(':')+1));
   if (theRealsScore > theNicksScore){
      document.getElementById('theWinner').textContent = "Game over! The Reals win!";
      document.getElementById('theWinner').innerText = "Game over! The Reals win!";
      }
   else if (theRealsScore < theNicksScore){
      document.getElementById('theWinner').textContent = "Game over! The Nicks win!";
      document.getElementById('theWinner').innerText = "Game over! The Nicks win!";
      }
   else{
      document.getElementById('theWinner').textContent = "Game over! Draw!";
      document.getElementById('theWinner').innerText = "Game over! Draw!";
      }
   }

function makeAPlay(){
   var rand = Math.random();
   if (rand < .1){
      theRealsScored();
      return;
      }
   if (rand < .3){
      randomRebound();
      return;
      }
   if (rand > .9){
      theNicksScored();
      return;
      }
   }

function theRealsScored(){
   var theScoreStr = document.getElementById('realsScore').textContent;
   if (theScoreStr == null){
      theScoreStr = document.getElementById('realsScore').innerText;
      }
   var theScore = parseInt(theScoreStr.substring(theScoreStr.indexOf(':')+1));
   theScore = theScore + 1;
   document.getElementById('realsScore').textContent = "The Reals: " + theScore;
   document.getElementById('realsScore').innerText = "The Reals: " + theScore;
   statFlash('realsScore');
   var rand = Math.random();
   if (rand < .4){
      playerStatIncreased("charlesPoints");
      if (rand < .2){
         playerStatIncreased("steveAssists");
         }
      }
   else if (rand < .6){
      playerStatIncreased("stevePoints");
      if (rand < .5){
         playerStatIncreased("charlesAssists");
         }
      }
   else if (rand < .8){
      playerStatIncreased("ginnPoints");
      if (rand < .7){
         playerStatIncreased("aaronlevAssists");
         }
      }
   else{
      playerStatIncreased("aaronPoints");
      if (rand < .9){
         playerStatIncreased("ginnAssists");
         }
      }
   }

function theNicksScored(){
   var theScoreStr = document.getElementById('nicksScore').textContent;
   if (theScoreStr == null){
      theScoreStr = document.getElementById('nicksScore').innerText;
      }
   var theScore = parseInt(theScoreStr.substring(theScoreStr.indexOf(':')+1));
   theScore = theScore + 1;
   document.getElementById('nicksScore').textContent = "The Nicks: " + theScore;
   document.getElementById('nicksScore').innerText = "The Nicks: " + theScore;
   statFlash('nicksScore');
   var rand = Math.random();
   if (rand < .4){
      playerStatIncreased("clcPoints");
      if (rand < .2){
         playerStatIncreased("aaronlevAssists");
         }
      }
   else if (rand < .6){
      playerStatIncreased("slPoints");
      if (rand < .5){
         playerStatIncreased("gcAssists");
         }
      }
   else if (rand < .8){
      playerStatIncreased("gcPoints");
      if (rand < .7){
         playerStatIncreased("slAssists");
         }
      }
   else{
      playerStatIncreased("aaronlevPoints");
      if (rand < .9){
         playerStatIncreased("clcAssists");
         }
      }
   }

function randomRebound(){
   var rand = Math.random();
   if (rand < .2){
      playerStatIncreased("charlesRebounds");
      }
   else if (rand < .3){
      playerStatIncreased("steveRebounds");
      }
   else if (rand < .4){
      playerStatIncreased("ginnRebounds");
      }
   else if (rand < .5){
      playerStatIncreased("aaronRebounds");
      }
   else if (rand < .7){
      playerStatIncreased("clcRebounds");
      }
   else if (rand < .8){
      playerStatIncreased("slRebounds");
      }
   else if (rand < .9){
      playerStatIncreased("gcRebounds");
      }
   else{
      playerStatIncreased("aaronlevRebounds");
      }
   }

function playerStatIncreased(playerStatsIDStr){
   var theStatsStr = document.getElementById(playerStatsIDStr).textContent;
   if (theStatsStr == null){
      theStatsStr = document.getElementById(playerStatsIDStr).innerText;
      }
   var stats = parseInt(theStatsStr);
   stats = stats + 1;
   document.getElementById(playerStatsIDStr).textContent = stats;
   document.getElementById(playerStatsIDStr).innerText = stats;
   statFlash(playerStatsIDStr);
   }

function setMinimumTimeBetweenPlays(){
   minimumWaitTime = 5;
   currentTimer = minimumWaitTime;
   }
/* ]]> */
</script>

</head>

<body style="padding:30px">


<h1>The Reals versus The Nicks</h1>


<div id="scoreboardRegion" itsnat:nocache="true" >

<h2>Game Clock</h2>
<h2 id="gameClock" aaa:live="off">05:00</h2>


<div id="theReals">

<h3 id="realsScore" aaa:live="polite">The Reals: 0</h3>
<table id="realNamesStats" summary="Stats for the Reals team" border="1" width="100%">
<tbody>
<tr><th>Lineup</th><th>Points</th><th>Rebounds</th><th>Assists</th></tr>

<tr aaa:live="polite"><td id="charlesName">Charles</td><td id="charlesPoints" class="statsCell" aaa:labelledby="charlesName">0</td><td id="charlesRebounds" class="statsCell" aaa:labelledby="charlesName">0</td><td id="charlesAssists" class="statsCell" aaa:labelledby="charlesName">0</td></tr>

<tr aaa:live="polite"><td id="aaronName">Aaron</td><td id="aaronPoints" class="statsCell" aaa:labelledby="aaronName">0</td><td id="aaronRebounds" class="statsCell" aaa:labelledby="aaronName">0</td><td id="aaronAssists" class="statsCell" aaa:labelledby="aaronName">0</td></tr>

<tr aaa:live="polite"><td id="ginnName">Ginn</td><td id="ginnPoints" class="statsCell" aaa:labelledby="ginnName">0</td><td id="ginnRebounds" class="statsCell" aaa:labelledby="ginnName">0</td><td id="ginnAssists" class="statsCell" aaa:labelledby="ginnName">0</td></tr>

<tr aaa:live="polite"><td id="steveName">Steve</td><td id="stevePoints" class="statsCell" aaa:labelledby="steveName">0</td><td id="steveRebounds" class="statsCell" aaa:labelledby="steveName">0</td><td id="steveAssists" class="statsCell" aaa:labelledby="steveName">0</td></tr>
</tbody>
</table>
</div>

<div id="theNicks">

<h3 id="nicksScore" aaa:live="polite">The Nicks: 0</h3>
<table id="nickNamesStats" summary="Stats for the Nicks team" border="1" width="100%">
<tbody>
<tr><th>Lineup</th><th>Points</th><th>Rebounds</th><th>Assists</th></tr>

<tr aaa:live="polite"><td id="clcName">CLC-4-TTS</td><td id="clcPoints" class="statsCell" aaa:labelledby="clcName">0</td><td id="clcRebounds" class="statsCell" aaa:labelledby="clcName">0</td><td id="clcAssists" class="statsCell" aaa:labelledby="clcName">0</td></tr>

<tr aaa:live="polite"><td id="aaronlevName">aaronlev</td><td id="aaronlevPoints" class="statsCell" aaa:labelledby="aaronlevName">0</td><td id="aaronlevRebounds" class="statsCell" aaa:labelledby="aaronlevName">0</td><td id="aaronlevAssists" class="statsCell" aaa:labelledby="aaronlevName">0</td></tr>

<tr aaa:live="polite"><td id="gcName">GC</td><td id="gcPoints" class="statsCell" aaa:labelledby="gcName">0</td><td id="gcRebounds" class="statsCell" aaa:labelledby="gcName">0</td><td id="gcAssists" class="statsCell" aaa:labelledby="gcName">0</td></tr>

<tr aaa:live="polite"><td id="slName">SL</td><td id="slPoints" class="statsCell" aaa:labelledby="slName">0</td><td id="slRebounds" class="statsCell" aaa:labelledby="slName">0</td><td id="slAssists" class="statsCell" aaa:labelledby="slName">0</td></tr>
</tbody>
</table>
</div>
</div>

<div id="winnerDiv" itsnat:nocache="true">
<h1 id="theWinner" aaa:live="polite"></h1>
</div>

<br /><br />
<p>This example is copied and slightly modified from the old version of this
    <a href="http://accessibleajax.clcworld.net/scoreboard/scoreboard.htm" target="_blank">one</a>,
    is based on this old WAI-ARIA <a href="http://www.w3.org/TR/2008/WD-wai-aria-20080204/#impl_namespace " target="_blank">specification</a>
    specifying namespaces for WAI-ARIA attributes but served with text/html MIME and <a href="http://www.itsnat.org" target="_blank">ItsNat</a>.
    ItsNat automatically rebuilds all namespaced WAI-ARIA attributes to be recognized
    (with text/html MIME namespaces are ignored). Current WAI-ARIA specification is not based on
    namespaces to be compatible with MSIE because MSIE does not support XHTML MIME
   (application/xhtml+xml).
</p>

<p>The focus of this example is not WAI-ARIA, it shows how <a href="http://www.itsnat.org" target="_blank">ItsNat</a> can automatically rebuild on load time
   non-HTML/XHTML namespaces in HTML/XHTML pages served with HTML MIME (text/html) for W3C browsers and
   remain compatible with MSIE. ItsNat does not know WAI-ARIA attributes, any non-XHTML namespace
   is supported by ItsNat.
</p>
<p>This example works in W3C browsers (FireFox, Opera, WebKit based...)
   recognizing namespaces in markup, you can use a screen reader like FireVox installed on FireFox to recognize live regions.
   It also works in MSIE ignoring namespaces (no namespace rebuild).
</p>
<p><a href="http://www.firevox.clcworld.net/">Fire Vox</a> is an extension for FireFox,
   it supports the old namespace based WAI-ARIA specification.
   If your FireFox version is not supported by Fire Vox, use a virtual machine and install the exact FireFox
   version.
</p>

<br />
<a href=".">RETURN</a>

</body>
</html>
